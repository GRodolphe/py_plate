name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run ruff linting
      run: |
        ruff check

    - name: Run ruff formatting check
      run: |
        ruff format --check

    - name: Run mypy type checking
      run: |
        mypy src/

    - name: Run tests with coverage
      run: |
        pytest --cov --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install safety detect-secrets bandit

    - name: Run Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'

    - name: Run Trivy filesystem scan (JSON report)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'json'
        output: 'trivy-fs-results.json'

    - name: Upload Trivy filesystem results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-fs-results
        path: trivy-fs-results.json

    - name: Run bandit security linter
      run: |
        bandit -r src/ -c pyproject.toml

    - name: Run safety check
      run: |
        safety check || true

    - name: Run secret detection
      run: |
        detect-secrets scan --baseline .secrets.baseline

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: |
        python -m build

    - name: Run Trivy scan on built package
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'dist/'
        format: 'table'

    - name: Run Trivy scan on built package (JSON report)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'dist/'
        format: 'json'
        output: 'trivy-package-results.json'

    - name: Upload Trivy package results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-package-results
        path: trivy-package-results.json

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  # Container security scan job - uncomment when you add Docker support
  # container-security:
  #   name: Container Security Scan
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #
  #   steps:
  #   - uses: actions/checkout@v4
  #
  #   - name: Build Docker image
  #     run: |
  #       docker build -t py_plate:latest .
  #
  #   - name: Run Trivy container scan
  #     uses: aquasecurity/trivy-action@master
  #     with:
  #       image-ref: 'py_plate:latest'
  #       format: 'sarif'
  #       output: 'trivy-container-results.sarif'
  #
  #   - name: Upload Trivy container scan results to GitHub Security tab
  #     uses: github/codeql-action/upload-sarif@v3
  #     if: always()
  #     with:
  #       sarif_file: 'trivy-container-results.sarif'
  #
  #   - name: Run Trivy container scan (JSON report)
  #     uses: aquasecurity/trivy-action@master
  #     with:
  #       image-ref: 'py_plate:latest'
  #       format: 'json'
  #       output: 'trivy-container-results.json'
  #
  #   - name: Upload Trivy container results
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: trivy-container-results
  #       path: trivy-container-results.json
