name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  test:
    name: Test before release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests
      run: |
        pytest --cov

    - name: Run linting
      run: |
        ruff check
        ruff format --check
        mypy src/

  build:
    name: Build and publish
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: release
      url: https://pypi.org/p/py_plate

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        python -m twine check dist/*

    - name: Install security tools
      run: |
        pip install safety bandit detect-secrets

    - name: Run Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'json'
        output: 'trivy-fs-results.json'

    - name: Run Trivy package scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'dist/'
        format: 'json'
        output: 'trivy-package-results.json'

    - name: Run bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-results.json || true

    - name: Run safety check
      run: |
        safety check --json --output safety-results.json || true

    - name: Run secret detection
      run: |
        detect-secrets scan --baseline .secrets.baseline --force-use-all-plugins > secrets-scan-results.json || true

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create GitHub Release
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --generate-notes \
          --draft=false \
          --prerelease=false \
          dist/* \
          trivy-fs-results.json \
          trivy-package-results.json \
          bandit-results.json \
          safety-results.json \
          secrets-scan-results.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
